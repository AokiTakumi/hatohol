#!/usr/bin/env python

import hatohol
import json
import argparse
from sets import Set

class ParamGenerator:

    def get_plugin_path(self):
        return ''

    def get_zabbix_params(self):
        obj = []
        obj.append({'id':'nickname',
                    'label':'Nickname'});
        obj.append({'id':'hostName',
                    'label':'Host name'});
        obj.append({'id':'ipAddress',
                    'label':'IP address'});
        obj.append({'id':'port',
                    'label':'Port',
                    'default':'80'});
        obj.append({'id':'userName',
                    'label':'User name'});
        obj.append({'id':'password',
                    'label':'Password',
                    'inputStyle':'password'});
        obj.append({'id':'pollingInterval',
                    'label':'Polling interval (sec)',
                    'default':'30'});
        obj.append({'id':'retryInterval',
                    'label':'Retry interval (sec)',
                    'default':'10'});
        return obj;

    def get_hapi_params(self):
        obj = []
        obj.append({'id':'passiveMode',
                    'label':'Passive mode',
                    'inputStyle':'checkBox'});
        obj.append({'id':'brokerUrl',
                    'label':'Broker URL',
                    'allowEmpty':True,
                    'hint':'(empty: Default)'});
        obj.append({'id':'staticQueueAddress',
                    'label':'Static queue address',
                    'allowEmpty':True,
                    'hint':'(empty: Default)'});
        return obj;


class ZabbixParamGenerator(ParamGenerator):
    def get_server_type(self):
        return hatohol.MONITORING_SYSTEM_ZABBIX

    def get_server_type_name(self):
        return 'Zabbix'

    def get_parameters(self):
        return self.get_zabbix_params()


class NagiosParamGenerator(ParamGenerator):
    def get_server_type(self):
        return hatohol.MONITORING_SYSTEM_NAGIOS

    def get_server_type_name(self):
        return 'Nagios'

    def get_parameters(self):
        obj = []
        obj.append({'id':'nickname',
                    'label':'Nickname'});
        obj.append({'id':'hostName',
                    'label':'Host name'});
        obj.append({'id':'ipAddress',
                    'label':'IP address'});
        obj.append({'id':'port',
                    'label':'Port',
                    'default':'0'});
        obj.append({'id':'dbName',
                    'label':'DB name'});
        obj.append({'id':'userName',
                    'label':'User name'});
        obj.append({'id':'password',
                    'label':'Password',
                    'inputStyle':'password'});
        obj.append({'id':'pollingInterval',
                    'label':'Polling interval (sec)'});
        obj.append({'label':'Retry interval (sec)',
                    'id':'retryInterval'});
        return obj


class HapiZabbixParamGenerator(ParamGenerator):
    def get_server_type(self):
        return hatohol.MONITORING_SYSTEM_HAPI_ZABBIX

    def get_server_type_name(self):
        return 'Zabbix (HAPI) [experimental]'

    def get_parameters(self):
        obj = self.get_zabbix_params()
        obj.extend(self.get_hapi_params())
        return obj

    def get_plugin_path(self):
        return 'hatohol-arm-plugin-zabbix';


class HapiJSONParamGenerator(ParamGenerator):
    def get_server_type(self):
        return hatohol.MONITORING_SYSTEM_HAPI_JSON

    def get_server_type_name(self):
        return 'JSON (HAPI) [experimental]'

    def get_parameters(self):
        obj = []
        obj.append({'id':'nickname',
                    'label':'Nickname'});
        obj.extend(self.get_hapi_params())
        obj.append({'id':'tlsCertificatePath',
                    'label':'TLS client certificate path'});
        obj.append({'id':'tlsKeyPath',
                    'label':'TLS client key path'});
        obj.append({'id':'tlsCACertificatePath',
                    'label':'TLS CA certificate path'});
        obj.append({'id':'tlsEnableVerify',
                    'label':'TLS: Enable verify',
                    'inputStyle':'checkBox'});
        return obj


class HapiCeilometerGenerator(ParamGenerator):
    def get_server_type(self):
        return hatohol.MONITORING_SYSTEM_HAPI_CEILOMETER

    def get_server_type_name(self):
        return 'Ceilometer'

    def get_parameters(self):
        obj = []
        obj.append({'id':'nickname',
                    'label':'Nickname'});
        obj.append({'id':'hostName',
                    'label':'Keystone URL',
                    'hint':'Example: http://controller:5000/v2.0'});
        obj.append({'id':'ipAddress',
                    'label':'IP address',
                    'hidden':True,
                    'default':'127.0.0.1'});
        obj.append({'id':'port',
                    'label':'Port',
                    'hidden':True,
                    'default':'0'});
        obj.append({'id':'dbName',
                    'label':'Tenant name'});
        obj.append({'id':'userName',
                    'label':'User name'});
        obj.append({'id':'password',
                    'label':'Password',
                    'inputStyle':'password'});
        obj.append({'id':'pollingInterval',
                    'label':'Polling interval (sec)',
                    'default':'30'});
        obj.append({'id':'retryInterval',
                    'label':'Retry interval (sec)',
                    'default':'10'});
        obj.extend(self.get_hapi_params())
        return obj

    def get_plugin_path(self):
        return 'hatohol-arm-plugin-ceilometer'


def generate_one_type(table_name, server_type, server_label, parameters, plugin_path):
    line = 'INSERT ' + table_name + ' VALUES ('
    line += '%d, \'%s\', \'%s\', \'%s\');' % (server_type, server_label, parameters, plugin_path)
    print line

def generate_mysql(generators):
    TABLE_NAME = 'server_types'
    for gen in generators:
        generate_one_type(TABLE_NAME, gen.get_server_type(),
                          gen.get_server_type_name(),
                          json.dumps(gen.get_parameters()),
                          gen.get_plugin_path())

def generate_label_gettext(generators):
    labels = Set()
    for gen in generators:
        for obj in gen.get_parameters():
            labels.add(obj['label']);
    for label in labels:
      print 'gettext("' + label + '")'


def main():
    parser = argparse.ArgumentParser(description="Hatohol Server Types Utility.")
    parser.add_argument('command', choices=['mysql', 'label-gettext'])
    args = parser.parse_args()

    generators = (
        ZabbixParamGenerator(),
        NagiosParamGenerator(),
        HapiZabbixParamGenerator(),
        HapiJSONParamGenerator(),
        HapiCeilometerGenerator(),
    )

    command_handlers = {
        'mysql': generate_mysql,
        'label-gettext': generate_label_gettext,
    }[args.command](generators)


if __name__ == '__main__':
    main()
