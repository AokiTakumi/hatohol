#!/usr/bin/env python

import hatohol
import json

def get_zabbix_params():
    obj = []
    obj.append({'id':'nickname',
                'label':'Nickname'});
    obj.append({'id':'hostName',
                'label':'Host name'});
    obj.append({'id':'ipAddress',
                'label':'IP address'});
    obj.append({'id':'port',
                'label':'Port',
                'default':'80'});
    obj.append({'id':'userName',
                'label':'User name'});
    obj.append({'id':'password',
                'label':'Password'});
    obj.append({'id':'pollingInterval',
                'label':'Polling interval (sec)',
                'default':'30'});
    obj.append({'id':'retryInterval',
                'label':'Retry interval (sec)',
                'default':'10'});
    return obj;


def get_hapi_params():
    obj = []
    obj.append({'id':'passiveMode',
                'label':'Passive mode',
                'inputStyle':'checkBox'});
    obj.append({'id':'brokerUrl',
                'label':'Broker URL',
                'allowEmpty':True,
                'hint':'(empty: Default)'});
    obj.append({'id':'staticQueueAddress',
                'label':'Static queue address',
                'allowEmpty':True,
                'hint':'(empty: Default)'});
    return obj;


class ZabbixParamGenerator:
    def __call__(self):
        return json.dumps(get_zabbix_params())


class NagiosParamGenerator:
    def __call__(self):
        obj = []
        obj.append({'id':'nickname',
                    'label':'Nickname'});
        obj.append({'id':'hostName',
                    'label':'Host name'});
        obj.append({'id':'ipAddress',
                    'label':'IP address'});
        obj.append({'id':'port',
                    'label':'Port',
                    'default':'0'});
        obj.append({'id':'dbName',
                    'label':'DB name'});
        obj.append({'id':'userName',
                    'label':'User name'});
        obj.append({'id':'password',
                    'label':'Password'});
        obj.append({'id':'pollingInterval',
                    'label':'Polling interval (sec)'});
        obj.append({'label':'Retry interval (sec)',
                    'id':'retryInterval'});
        return json.dumps(obj)


class HapiZabbixParamGenerator:
    def __call__(self):
        obj = get_zabbix_params()
        obj.extend(get_hapi_params())
        return json.dumps(obj)


class HapiJSONParamGenerator:
    def __call__(self):
        obj = get_zabbix_params()
        obj.extend(get_hapi_params())
        return json.dumps(obj)

class HapiCeilometerGenerator:
    def __call__(self):
        obj = []
        obj.append({'id':'nickname',
                    'label':'Nickname'});
        obj.append({'id':'hostName',
                    'label':'Keystone URL',
                    'hint':'Example: http://controller:5000/v2.0'});
        obj.append({'id':'ipAddress',
                    'label':'IP address',
                    'hidden':True,
                    'default':'127.0.0.1'});
        obj.append({'id':'port',
                    'label':'Port',
                    'hidden':True,
                    'default':'0'});
        obj.append({'id':'dbName',
                    'label':'Tenant name'});
        obj.append({'id':'userName',
                    'label':'User name'});
        obj.append({'id':'password',
                    'label':'Password'});
        obj.append({'id':'pollingInterval',
                    'label':'Polling interval (sec)',
                    'default':'30'});
        obj.append({'id':'retryInterval',
                    'label':'Retry interval (sec)',
                    'default':'10'});
        obj.extend(get_hapi_params())
        return json.dumps(obj)


def generate_one_type(table_name, server_type, server_label, generator, plugin_path=''):
    line = 'INSERT ' + table_name + ' VALUES ('
    line += '%d, \'%s\', \'%s\', \'%s\');' % (server_type, server_label, generator(), plugin_path)
    print line


def main():
    table_name = 'server_types'
    print 'DELETE FROM %s;' % table_name
    generate_one_type(table_name, hatohol.MONITORING_SYSTEM_ZABBIX, 'Zabbix',
                      ZabbixParamGenerator());
    generate_one_type(table_name, hatohol.MONITORING_SYSTEM_NAGIOS, 'Nagios',
                      NagiosParamGenerator());
    generate_one_type(table_name, hatohol.MONITORING_SYSTEM_HAPI_ZABBIX,
                      'Zabbix (HAPI) [experimental]',
                      HapiZabbixParamGenerator(), 'hatohol-arm-plugin-zabbix');
    generate_one_type(table_name, hatohol.MONITORING_SYSTEM_HAPI_JSON,
                      'JSON (HAPI) [experimental]',
                      HapiJSONParamGenerator());
    generate_one_type(table_name, hatohol.MONITORING_SYSTEM_HAPI_CEILOMETER,
                      'Ceilometer',
                      HapiCeilometerGenerator(),
                      'hatohol-arm-plugin-ceilometer');


if __name__ == '__main__':
    main()
